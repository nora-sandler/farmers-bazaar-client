[{"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/serviceWorker.js":"1","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Landing.js":"2","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/ListOfDiets.js":"3","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Footer.js":"4","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/RecipesForDiets.js":"5","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/config.js":"6","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Register.js":"7","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/AddItems.js":"8","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/App.js":"9","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/services/auth-api-service.js":"10","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Login.js":"11","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/NavBar.js":"12","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/index.js":"13","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/services/token-service.js":"14","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Header.js":"15","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/validationError.js":"16","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Inventory.js":"17","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Error.js":"18","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/ItemDetails.js":"19"},{"size":5086,"mtime":1598489684145,"results":"20","hashOfConfig":"21"},{"size":794,"mtime":1606777055409,"results":"22","hashOfConfig":"21"},{"size":8916,"mtime":1605937211875,"results":"23","hashOfConfig":"21"},{"size":891,"mtime":1605937070289,"results":"24","hashOfConfig":"21"},{"size":3243,"mtime":1605937211863,"results":"25","hashOfConfig":"21"},{"size":168,"mtime":1606613931241,"results":"26","hashOfConfig":"21"},{"size":12984,"mtime":1606703600244,"results":"27","hashOfConfig":"21"},{"size":8246,"mtime":1606765163033,"results":"28","hashOfConfig":"21"},{"size":1044,"mtime":1606756871060,"results":"29","hashOfConfig":"21"},{"size":939,"mtime":1605754621026,"results":"30","hashOfConfig":"21"},{"size":5067,"mtime":1606703571799,"results":"31","hashOfConfig":"21"},{"size":2046,"mtime":1606753746594,"results":"32","hashOfConfig":"21"},{"size":457,"mtime":1604978599402,"results":"33","hashOfConfig":"21"},{"size":767,"mtime":1599016262601,"results":"34","hashOfConfig":"21"},{"size":391,"mtime":1605937085016,"results":"35","hashOfConfig":"21"},{"size":192,"mtime":1598921770357,"results":"36","hashOfConfig":"21"},{"size":3032,"mtime":1606789388967,"results":"37","hashOfConfig":"21"},{"size":212,"mtime":1606753640407,"results":"38","hashOfConfig":"21"},{"size":10060,"mtime":1606787640311,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kicnnb",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"57"},"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/serviceWorker.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Landing.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/ListOfDiets.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Footer.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/RecipesForDiets.js",["82"],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/config.js",["83"],"export default {\n    API_ENDPOINT: \"https://farmers-bazaar-api.herokuapp.com/api\",\n    // API_ENDPOINT: \"http://localhost:8000/api\",\n    TOKEN_KEY: 'farmers-bazaar'\n  }","/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Register.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/AddItems.js",[],["84","85"],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/App.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/services/auth-api-service.js",[],["86","87"],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Login.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/NavBar.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/index.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/services/token-service.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Header.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/validationError.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Inventory.js",["88","89"],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/Error.js",[],"/Users/gulnorasandler/Documents/new-farmers-bazaar-client/src/ItemDetails.js",["90"],"import React from \"react\"\nimport config from \"./config\"\nimport TokenService from \"./services/token-service\"\nimport ValidationError from \"./validationError\"\nimport { Link } from 'react-router-dom'\n\nclass ItemDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemDetails: {},\n\n            itemName: {\n                value: \"\",\n                touched: false,\n            },\n            itemDescription: {\n                value: \"\",\n                touched: false,\n            },\n            itemPrice: {\n                value: \"\",\n                touched: false,\n            },\n            itemCount: {\n                value: \"\",\n                touched: false,\n            },\n\n        };\n    }\n\n\n    changeItemName(itemName) {\n        this.setState({\n            itemName: { value: itemName, touched: true },\n        });\n    }\n\n    changeItemDescription(itemDescription) {\n        this.setState({\n            itemDescription: { value: itemDescription, touched: true },\n        });\n    }\n\n    changeItemPrice(itemPrice) {\n        this.setState({\n            itemPrice: { value: itemPrice, touched: true },\n        });\n    }\n\n    changeItemCount(itemCount) {\n        this.setState({\n            itemCount: { value: itemCount, touched: true },\n        });\n    }\n\n\n    validateItemName() {\n        const itemName = this.state.itemName.value.trim();\n        if (itemName.length === 0) {\n            return <p className=\"input-error\">Item name is required</p>;\n        } else if (itemName.length < 2) {\n            return (\n                <p className=\"input-error\">\n                    Item name must be at least 2 characters long\n                </p>\n            );\n        }\n    }\n\n\n    validateItemDescription() {\n        const itemDescription = this.state.itemDescription.value.trim();\n        if (itemDescription.length === 0) {\n            return <p className=\"input-error\">Item description is required</p>;\n        } else if (itemDescription.length < 2) {\n            return (\n                <p className=\"input-error\">\n                    Item description must be at least 2 characters long\n                </p>\n            );\n        }\n    }\n\n\n    validateItemPrice() {\n        const itemPrice = this.state.itemPrice.value.trim();\n        if (itemPrice.length === 0) {\n            return <p className=\"input-error\">Item price is required</p>;\n        } else if (itemPrice.length < 1) {\n            return (\n                <p className=\"input-error\">\n                    Item price must be at least 1 characters long\n                </p>\n            );\n        }\n    }\n\n\n    validateItemCount() {\n        const itemCount = this.state.itemCount.value.trim();\n        if (itemCount.length === 0) {\n            return <p className=\"input-error\">Item count is required</p>;\n        } else if (itemCount.length < 1) {\n            return (\n                <p className=\"input-error\">\n                    Item price must be at least 1 characters long\n                </p>\n            );\n        }\n    }\n\n    componentDidMount() {\n\n        let currentUser = TokenService.getUserId();\n        console.log(currentUser)\n\n        //if the user is not logged in, send him to landing page\n        if (!TokenService.hasAuthToken()) {\n            window.location = '/'\n        }\n\n        const itemId = this.props.match.params.itemId;\n\n\n\n        let getItemDetailsUrl = `${config.API_ENDPOINT}/items/${itemId}`;\n\n        fetch(getItemDetailsUrl)\n            .then((itemDetails) => itemDetails.json())\n            .then((itemDetails) => {\n                console.log(itemDetails)\n                this.setState({\n                    itemDetails: itemDetails,\n                });\n                console.log(this.state);\n            })\n\n            .catch((error) => this.setState({ error }));\n    }\n\n\n    updateItem(event) {\n\n        // console.log('hello there')\n        event.preventDefault()\n        const data = {}\n\n        const formData = new FormData(event.target)\n\n        for (let value of formData) {\n            data[value[0]] = value[1]\n        }\n\n        let user_id = TokenService.getUserId();\n\n        let { itemName, itemDescription, itemPrice, itemCount } = data;\n        //get the current date in unix format \n        const timeElapsed = Date.now();\n        //conver the unix format date into string\n        const today = new Date(timeElapsed);\n        \n        let payload = {\n            users_id: user_id,\n            name: itemName,\n            description: itemDescription,\n            itemprice: itemPrice,\n            itemcount: itemCount,\n            img: \"no-img.jpg\",\n            date_created: today.toISOString() //converting to this format \"2020-06-13T18:30:00.000Z\"\n\n        }\n\n\n\n    //     console.log(this.props)\n\n    //    const itemId = this.props.match.params.itemId;\nconst itemId = window.location.href.split(\"/\")[4]\n// console.log(itemId,'-----------------')\n// const itemId2 = this.props.match.params.itemId;\n\n        fetch(`${config.API_ENDPOINT}/items/${itemId}`, {\n            method: 'PATCH',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n        })\n            .then((response) => response.json())\n            .then(responseJson => {\n                window.location = '/inventory'\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n\n    render() {\n\n\n\n\n\n\n\n        // console.log(this.state.itemDetails.length)\n        let showItemsDetailsPage = ''\n        //by default show there are no items\n        if (this.state.itemDetails.length === 0) {\n            showItemsDetailsPage =\n                <div className=\"itemsDetails\">\n                    No item details here\n             </div>\n        }\n        // if there are items \n        else {\n\n            // display details for each one of the items\n            showItemsDetailsPage =\n                <li>\n                    <form className=\"itemDetails\" onSubmit={this.updateItem}>\n                        <label htmlFor=\"itemName\">Item name</label>\n                        <input\n                            type=\"text\"\n                            id=\"itemName\"\n                            name=\"itemName\"\n                            placeholder=\"Tomatoes\"\n                            defaultValue = {this.state.itemDetails.name}\n                            onChange={(e) =>\n                                this.changeItemName(e.target.value)\n                            }\n                            required\n                        />\n                        {this.state.itemName.touched && (\n                            <ValidationError\n                                message={this.validateItemName()}\n                            />\n                        )}\n                        <label htmlFor=\"itemDescription\">Item description</label>\n                        <input\n                            type=\"text\"\n                            id=\"itemDescription\"\n                            name=\"itemDescription\"\n                            placeholder=\"Sweet\"\n                            defaultValue = {this.state.itemDetails.description}\n                            onChange={(e) =>\n                                this.changeItemDescription(e.target.value)\n                            }\n                            required\n                        />\n                        {this.state.itemDescription.touched && (\n                            <ValidationError\n                                message={this.validateItemDescription()}\n                            />\n                        )}\n\n\n                        <label htmlFor=\"itemPrice\">Item price</label>\n                        <input\n                            type=\"text\"\n                            id=\"itemPrice\"\n                            name=\"itemPrice\"\n                            placeholder=\"Item price\"\n                            defaultValue = {this.state.itemDetails.itemprice}\n                            onChange={(e) =>\n                                this.changeItemPrice(e.target.value)\n                            }\n                            required\n                        />\n                        {this.state.itemPrice.touched && (\n                            <ValidationError\n                                message={this.validateItemPrice()}\n                            />\n                        )}\n\n\n                        <label htmlFor=\"itemCount\">Item count</label>\n                        <input\n                            type=\"text\"\n                            id=\"itemCount\"\n                            name=\"itemCount\"\n                            placeholder=\"Item count\"\n                            defaultValue = {this.state.itemDetails.itemcount}\n                            onChange={(e) =>\n                                this.changeItemCount(e.target.value)\n                            }\n                            required\n                        />\n                        {this.state.itemCount.touched && (\n                            <ValidationError\n                                message={this.validateItemCount()}\n                            />\n                        )}\n\n                        <button\n                            className=\"go-button\"\n                            type=\"submit\"\n                        >\n                            Update item\n                        </button>\n                    </form>\n\n                    {/* <p>{this.state.itemDetails.name} </p>\n                    <p>{this.state.itemDetails.description} </p>\n                    <p>{this.state.itemDetails.price} </p>\n                    <p>{this.state.itemDetails.count} </p> */}\n                </li>\n        }\n\n\n\n\n        return (\n            <div className=\"UpdateItems\">\n                <section id=\"UpdateItemsPage\">\n                    {showItemsDetailsPage}\n         </section>\n            </div>\n        );\n    }\n}\n\nexport default ItemDetails;\n",{"ruleId":"91","severity":1,"message":"92","line":85,"column":80,"nodeType":"93","messageId":"94","endLine":85,"endColumn":82},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","endLine":5,"endColumn":4},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":66,"column":70,"nodeType":"93","messageId":"94","endLine":66,"endColumn":72},{"ruleId":"104","severity":1,"message":"108","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"no-unused-vars","'ValidationError' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]